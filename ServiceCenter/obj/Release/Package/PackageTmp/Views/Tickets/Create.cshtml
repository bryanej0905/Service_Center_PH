@model ServiceCenter.Models.Ticket
@{
    ViewBag.Title = "Crear Ticket";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    input[type="text"],
    textarea,
    select,
    input[type="file"],
    .form-control {
        background-color: #2c2c2c;
        color: #ffffff;
        border: 1px solid #555;
        border-radius: 5px;
        padding: 8px;
    }

        input[type="text"]:focus,
        textarea:focus,
        select:focus,
        input[type="file"]:focus {
            outline: none;
            border-color: #ff3333;
            background-color: #2c2c2c;
            color: white;
        }

        input::placeholder,
        textarea::placeholder {
            color: #aaa;
        }

    .ticket-form {
        background-color: lightgray;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
        max-width: 800px;
        margin: 30px auto;
    }

        .ticket-form h2 {
            color: #b30000;
            margin-bottom: 20px;
        }

    .btn-primary {
        background-color: #b30000;
        border: none;
        color: white;
    }

        .btn-primary:hover {
            background-color: #800000;
        }

    .btn-default {
        background-color: #333;
        color: white;
        border: none;
        padding: 6px 12px;
        border-radius: 4px;
        text-decoration: none;
        margin-left: 10px;
    }

        .btn-default:hover {
            background-color: #555;
            color: #fff;
        }

    .custom-file-label {
        display: inline-block;
        background-color: #2c2c2c;
        color: white;
        padding: 10px 20px;
        border-radius: 6px;
        cursor: pointer;
        border: 1px solid #555;
        transition: all 0.3s ease;
    }

        .custom-file-label:hover {
            background-color: #444;
            border-color: #ff3333;
        }

    .custom-file-input {
        display: none;
    }

    .control-label {
        color: black;
    }
</style>

<div class="ticket-form">
    <h2>Crear Ticket</h2>

    @using (Html.BeginForm("Create", "Tickets", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control", rows = 4 })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div hidden class="form-group">
                @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2", })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Estado, new { @class = "form-control",  })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Prioridad, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Prioridad, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Categoria, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DepartamentoId, "Departamento", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("DepartamentoId", null, "--Seleccione--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DepartamentoId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Adjunto</label>
                <div class="col-md-10">
                    <label class="custom-file-label">
                        Seleccionar archivo
                        <input type="file" name="archivoAdjunto" class="custom-file-input" onchange="updateFileName(this)">
                    </label>
                    <span id="archivoSeleccionado" style="margin-left: 10px; color: black; font-size: 0.9em;">Ningún archivo seleccionado</span>
                </div>
            </div>

            <br />

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Crear" class="btn btn-primary" />
                    @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-default" })
                </div>
            </div>
        </div>
    }

    <script>
        function updateFileName(input) {
            const fileName = input.files.length > 0 ? input.files[0].name : "Ningún archivo seleccionado";
            document.getElementById("archivoSeleccionado").textContent = fileName;
        }
    </script>

</div>