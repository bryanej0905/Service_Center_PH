@model ServiceCenter.ViewModels.ChangePasswordViewModel

@{
    ViewBag.Title = "Cambiar contraseña";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row justify-content-center mt-5 mb-5">
    <div class="col-md-6">

        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h4 class="mb-0">
                    <i class="fas fa-key me-2"></i>
                    @ViewBag.Title
                </h4>
            </div>

            <div class="card-body">
                @* Mensaje de éxito *@
                @if (TempData["StatusMessage"] != null)
                {
                    <div class="alert alert-success" role="alert">
                        @TempData["StatusMessage"]
                    </div>
                }

                @using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                {
                    @Html.AntiForgeryToken()

                    @* Resumen de errores *@
                    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                    <div class="form-floating mb-3">
                        @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", id = "oldPassword", placeholder = "Contraseña actual", required = "required" })
                        <label for="oldPassword">Contraseña actual</label>
                        @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger small" })
                    </div>

                    <div class="form-floating mb-3">
                        @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", id = "newPassword", placeholder = "Nueva contraseña", required = "required" })
                        <label for="newPassword">Nueva contraseña</label>
                        @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger small" })
                    </div>

                    <div class="form-floating mb-4">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", id = "confirmPassword", placeholder = "Confirmar contraseña", required = "required" })
                        <label for="confirmPassword">Confirmar contraseña</label>
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger small" })
                    </div>

                    <div class="d-flex justify-content-end">
                        <button type="submit" class="btn btn-primary me-2">
                            <i class="fas fa-check me-1"></i> Guardar
                        </button>
                        @Html.ActionLink("Cancelar", "Index", "Manage",
                            null,
                            new { @class = "btn btn-outline-secondary" })
                    </div>
                }
            </div>
        </div>

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
      // Bootstrap custom validation (opcional)
      (function () {
        'use strict';
        var forms = document.querySelectorAll('.needs-validation');
        Array.prototype.slice.call(forms).forEach(function (form) {
          form.addEventListener('submit', function (event) {
            if (!form.checkValidity()) {
              event.preventDefault();
              event.stopPropagation();
            }
            form.classList.add('was-validated');
          }, false);
        });
      })();
    </script>
}
